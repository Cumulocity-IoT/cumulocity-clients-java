pipeline {
    agent {
        dockerfile {
            dir '.jenkins/build'
            args '--network centos_default'
        }
    }
    triggers { pollSCM('H/5 * * * *') }
    options{
     buildDiscarder(logRotator(numToKeepStr: '10'))
     timeout(time: 1, unit: 'HOURS')
     disableConcurrentBuilds()
    }
    parameters {
        booleanParam(name: 'release', defaultValue: false, description: 'Defines if this should be a release build')
    }

    stages {

       stage('Checkout') {
           steps {
               checkout scm
               checkout([
                $class: 'MercurialSCM',
                credentialsId: 'jenkins-hg-key',
                installation: 'Mercurial',
                disableChangeLog: true,
                revision: 'develop',
                subdir: 'cumulocity-sdk',
                source: 'ssh://hg@bitbucket.org/m2m/cumulocity-sdk'])
                sh "chmod +x .jenkins/scripts/clean.sh && .jenkins/scripts/clean.sh"
           }
       }
       stage('Build') {
           steps {
               sh "chmod +x .jenkins/scripts/build.sh && .jenkins/scripts/build.sh"
           }
       }
       stage('Unit Test') {
           options {
             retry(3)
           }
           steps {
               sh "chmod +x .jenkins/scripts/test.sh && .jenkins/scripts/test.sh"
           }
           post {
               always {
                   junit (testResults: '**/TEST-*.xml', keepLongStdio: true)
                   jacoco()
               }
           }
       }
       stage('Deploy to Nexus') {
           when {
                not {
                    allOf{
                        expression { params.release }
                        branch 'release/**'
                    }
                }
           }
          
           steps {
               sh "chmod +x .jenkins/scripts/deploy.sh && .jenkins/scripts/deploy.sh"
           }
       }
       stage('Release') {
              when {
                expression { params.release }
                branch 'release/**'
              }
              steps {
                  sh "chmod +x .jenkins/scripts/release.sh && .jenkins/scripts/release.sh"
                  sshagent(['jenkins-hg-key']) {
                    sh "chmod +x .jenkins/scripts/publish.sh && .jenkins/scripts/publish.sh"
                  }
              }
        }
       
    }
    post {
        success{
            build(job:'Cumulocity-Platform-Services-BUILD2', wait: false)
        }
        failure {
            chat 'AAAAvnc5o90'
        }
    }
}